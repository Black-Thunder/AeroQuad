   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"Device_I2C.cpp"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text._ZN7TwoWire4readEv.constprop.0,"ax",%progbits
  19              		.align	1
  20              		.thumb
  21              		.thumb_func
  23              	_ZN7TwoWire4readEv.constprop.0:
  24              	.LFB132:
  25              		.file 1 "../Libmaple/libmaple/libraries/Wire/Wire.h"
   1:../Libmaple/libmaple/libraries/Wire/Wire.h **** /* *****************************************************************************
   2:../Libmaple/libmaple/libraries/Wire/Wire.h ****  * The MIT License
   3:../Libmaple/libmaple/libraries/Wire/Wire.h ****  *
   4:../Libmaple/libmaple/libraries/Wire/Wire.h ****  * Copyright (c) 2010 LeafLabs LLC.
   5:../Libmaple/libmaple/libraries/Wire/Wire.h ****  *
   6:../Libmaple/libmaple/libraries/Wire/Wire.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy
   7:../Libmaple/libmaple/libraries/Wire/Wire.h ****  * of this software and associated documentation files (the "Software"), to deal
   8:../Libmaple/libmaple/libraries/Wire/Wire.h ****  * in the Software without restriction, including without limitation the rights
   9:../Libmaple/libmaple/libraries/Wire/Wire.h ****  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  10:../Libmaple/libmaple/libraries/Wire/Wire.h ****  * copies of the Software, and to permit persons to whom the Software is
  11:../Libmaple/libmaple/libraries/Wire/Wire.h ****  * furnished to do so, subject to the following conditions:
  12:../Libmaple/libmaple/libraries/Wire/Wire.h ****  *
  13:../Libmaple/libmaple/libraries/Wire/Wire.h ****  * The above copyright notice and this permission notice shall be included in
  14:../Libmaple/libmaple/libraries/Wire/Wire.h ****  * all copies or substantial portions of the Software.
  15:../Libmaple/libmaple/libraries/Wire/Wire.h ****  *
  16:../Libmaple/libmaple/libraries/Wire/Wire.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  17:../Libmaple/libmaple/libraries/Wire/Wire.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  18:../Libmaple/libmaple/libraries/Wire/Wire.h ****  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  19:../Libmaple/libmaple/libraries/Wire/Wire.h ****  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  20:../Libmaple/libmaple/libraries/Wire/Wire.h ****  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  21:../Libmaple/libmaple/libraries/Wire/Wire.h ****  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  22:../Libmaple/libmaple/libraries/Wire/Wire.h ****  * THE SOFTWARE.
  23:../Libmaple/libmaple/libraries/Wire/Wire.h ****  * ****************************************************************************/
  24:../Libmaple/libmaple/libraries/Wire/Wire.h **** 
  25:../Libmaple/libmaple/libraries/Wire/Wire.h **** /**
  26:../Libmaple/libmaple/libraries/Wire/Wire.h ****  *  @brief Wire library, ported from Arduino. Provides a lean
  27:../Libmaple/libmaple/libraries/Wire/Wire.h ****  *  interface to I2C (two-wire) communication.
  28:../Libmaple/libmaple/libraries/Wire/Wire.h ****  */
  29:../Libmaple/libmaple/libraries/Wire/Wire.h **** 
  30:../Libmaple/libmaple/libraries/Wire/Wire.h **** #include "wirish.h"
  31:../Libmaple/libmaple/libraries/Wire/Wire.h **** 
  32:../Libmaple/libmaple/libraries/Wire/Wire.h **** #ifndef _WIRE_H_
  33:../Libmaple/libmaple/libraries/Wire/Wire.h **** #define _WIRE_H_
  34:../Libmaple/libmaple/libraries/Wire/Wire.h **** 
  35:../Libmaple/libmaple/libraries/Wire/Wire.h **** typedef struct {
  36:../Libmaple/libmaple/libraries/Wire/Wire.h ****   uint8 scl;
  37:../Libmaple/libmaple/libraries/Wire/Wire.h ****   uint8 sda;
  38:../Libmaple/libmaple/libraries/Wire/Wire.h **** } Port;
  39:../Libmaple/libmaple/libraries/Wire/Wire.h **** 
  40:../Libmaple/libmaple/libraries/Wire/Wire.h **** /* You must update the online docs if you change this value. */
  41:../Libmaple/libmaple/libraries/Wire/Wire.h **** #define WIRE_BUFSIZ 32
  42:../Libmaple/libmaple/libraries/Wire/Wire.h **** 
  43:../Libmaple/libmaple/libraries/Wire/Wire.h **** /* return codes from endTransmission() */
  44:../Libmaple/libmaple/libraries/Wire/Wire.h **** #define SUCCESS   0        /* transmission was successful */
  45:../Libmaple/libmaple/libraries/Wire/Wire.h **** #define EDATA     1        /* too much data */
  46:../Libmaple/libmaple/libraries/Wire/Wire.h **** #define ENACKADDR 2        /* received nack on transmit of address */
  47:../Libmaple/libmaple/libraries/Wire/Wire.h **** #define ENACKTRNS 3        /* received nack on transmit of data */
  48:../Libmaple/libmaple/libraries/Wire/Wire.h **** #define EOTHER    4        /* other error */
  49:../Libmaple/libmaple/libraries/Wire/Wire.h **** 
  50:../Libmaple/libmaple/libraries/Wire/Wire.h **** #define SDA 20
  51:../Libmaple/libmaple/libraries/Wire/Wire.h **** #define SCL 21
  52:../Libmaple/libmaple/libraries/Wire/Wire.h **** 
  53:../Libmaple/libmaple/libraries/Wire/Wire.h **** #define I2C_WRITE 0
  54:../Libmaple/libmaple/libraries/Wire/Wire.h **** #define I2C_READ  1
  55:../Libmaple/libmaple/libraries/Wire/Wire.h **** 
  56:../Libmaple/libmaple/libraries/Wire/Wire.h **** #if (F_CPU == 168000000)
  57:../Libmaple/libmaple/libraries/Wire/Wire.h **** 	#define I2C_DELAY_SCL delay_ns100(6) 
  58:../Libmaple/libmaple/libraries/Wire/Wire.h **** 	#define I2C_DELAY_SDA delay_ns100(2)
  59:../Libmaple/libmaple/libraries/Wire/Wire.h **** #else
  60:../Libmaple/libmaple/libraries/Wire/Wire.h **** 	#define I2C_DELAY_SCL
  61:../Libmaple/libmaple/libraries/Wire/Wire.h **** 	#define I2C_DELAY_SDA
  62:../Libmaple/libmaple/libraries/Wire/Wire.h **** #endif
  63:../Libmaple/libmaple/libraries/Wire/Wire.h **** 
  64:../Libmaple/libmaple/libraries/Wire/Wire.h **** class TwoWire {
  65:../Libmaple/libmaple/libraries/Wire/Wire.h ****  private:
  66:../Libmaple/libmaple/libraries/Wire/Wire.h ****     uint8 rx_buf[WIRE_BUFSIZ];      /* receive buffer */
  67:../Libmaple/libmaple/libraries/Wire/Wire.h ****     uint8 rx_buf_idx;               /* first unread idx in rx_buf */
  68:../Libmaple/libmaple/libraries/Wire/Wire.h ****     uint8 rx_buf_len;               /* number of bytes read */
  69:../Libmaple/libmaple/libraries/Wire/Wire.h **** 
  70:../Libmaple/libmaple/libraries/Wire/Wire.h ****     uint8 tx_addr;                  /* address transmitting to */
  71:../Libmaple/libmaple/libraries/Wire/Wire.h ****     uint8 tx_buf[WIRE_BUFSIZ];      /* transmit buffer */
  72:../Libmaple/libmaple/libraries/Wire/Wire.h ****     uint8 tx_buf_idx;               /* next idx available in tx_buf, -1 overflow */
  73:../Libmaple/libmaple/libraries/Wire/Wire.h ****     boolean tx_buf_overflow;
  74:../Libmaple/libmaple/libraries/Wire/Wire.h ****     Port port;
  75:../Libmaple/libmaple/libraries/Wire/Wire.h ****     uint8 writeOneByte(uint8);
  76:../Libmaple/libmaple/libraries/Wire/Wire.h ****     uint8 readOneByte(uint8, uint8*);
  77:../Libmaple/libmaple/libraries/Wire/Wire.h ****  public:
  78:../Libmaple/libmaple/libraries/Wire/Wire.h ****     TwoWire();
  79:../Libmaple/libmaple/libraries/Wire/Wire.h ****     void begin();
  80:../Libmaple/libmaple/libraries/Wire/Wire.h ****     void begin(uint8, uint8);
  81:../Libmaple/libmaple/libraries/Wire/Wire.h ****     void beginTransmission(uint8);
  82:../Libmaple/libmaple/libraries/Wire/Wire.h ****     void beginTransmission(int);
  83:../Libmaple/libmaple/libraries/Wire/Wire.h ****     uint8 endTransmission(void);
  84:../Libmaple/libmaple/libraries/Wire/Wire.h ****     uint8 requestFrom(uint8, int);
  85:../Libmaple/libmaple/libraries/Wire/Wire.h ****     uint8 requestFrom(int, int);
  86:../Libmaple/libmaple/libraries/Wire/Wire.h ****     void send(uint8);
  87:../Libmaple/libmaple/libraries/Wire/Wire.h ****     void send(uint8*, int);
  88:../Libmaple/libmaple/libraries/Wire/Wire.h ****     void send(int);
  89:../Libmaple/libmaple/libraries/Wire/Wire.h ****     void send(int*, int);
  90:../Libmaple/libmaple/libraries/Wire/Wire.h ****     void send(char*);
  91:../Libmaple/libmaple/libraries/Wire/Wire.h ****     uint8 available();
  92:../Libmaple/libmaple/libraries/Wire/Wire.h ****     uint8 receive();
  93:../Libmaple/libmaple/libraries/Wire/Wire.h **** 
  94:../Libmaple/libmaple/libraries/Wire/Wire.h ****     uint8 read() { return receive(); };
  26              		.loc 1 94 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
  32              		.loc 1 94 0
  33 0000 0148     		ldr	r0, .L2
  34 0002 FFF7FEBF 		b	_ZN7TwoWire7receiveEv
  35              	.L3:
  36 0006 00BF     		.align	2
  37              	.L2:
  38 0008 00000000 		.word	Wire
  39              		.cfi_endproc
  40              	.LFE132:
  42              		.section	.text._ZN7TwoWire5writeEh,"axG",%progbits,_ZN7TwoWire5writeEh,comdat
  43              		.align	1
  44              		.weak	_ZN7TwoWire5writeEh
  45              		.thumb
  46              		.thumb_func
  48              	_ZN7TwoWire5writeEh:
  49              	.LFB115:
  95:../Libmaple/libmaple/libraries/Wire/Wire.h ****     void write(uint8 data) { send(data); };
  50              		.loc 1 95 0
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54              		@ link register save eliminated.
  55              	.LVL1:
  56              		.loc 1 95 0
  57 0000 FFF7FEBF 		b	_ZN7TwoWire4sendEh
  58              	.LVL2:
  59              	.LVL3:
  60              		.cfi_endproc
  61              	.LFE115:
  63              		.section	.text._Z11sendByteI2Cih,"ax",%progbits
  64              		.align	1
  65              		.global	_Z11sendByteI2Cih
  66              		.thumb
  67              		.thumb_func
  69              	_Z11sendByteI2Cih:
  70              	.LFB120:
  71              		.file 2 "C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C/Device_I2C.cpp"
   1:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** /*
   2:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****   AeroQuad v3.0.1 - February 2012
   3:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****   www.AeroQuad.com
   4:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****   Copyright (c) 2012 Ted Carancho.  All rights reserved.
   5:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****   An Open Source Arduino based multicopter.
   6:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****  
   7:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****   This program is free software: you can redistribute it and/or modify 
   8:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****   it under the terms of the GNU General Public License as published by 
   9:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****   the Free Software Foundation, either version 3 of the License, or 
  10:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****   (at your option) any later version. 
  11:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** 
  12:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****   This program is distributed in the hope that it will be useful, 
  13:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****   but WITHOUT ANY WARRANTY; without even the implied warranty of 
  14:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
  15:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****   GNU General Public License for more details. 
  16:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** 
  17:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****   You should have received a copy of the GNU General Public License 
  18:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****   along with this program. If not, see <http://www.gnu.org/licenses/>. 
  19:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** */
  20:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** 
  21:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** // I2C functions
  22:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** #include "Device_I2C.h"
  23:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** 
  24:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** void sendByteI2C(int deviceAddress, byte dataValue) {
  72              		.loc 2 24 0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              	.LVL4:
  77 0000 0346     		mov	r3, r0
  78 0002 10B5     		push	{r4, lr}
  79              	.LCFI0:
  80              		.cfi_def_cfa_offset 8
  81              		.cfi_offset 14, -4
  82              		.cfi_offset 4, -8
  25:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** 
  26:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****   Wire.beginTransmission(deviceAddress);
  83              		.loc 2 26 0
  84 0004 0648     		ldr	r0, .L6
  85              	.LVL5:
  24:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** void sendByteI2C(int deviceAddress, byte dataValue) {
  86              		.loc 2 24 0
  87 0006 0C46     		mov	r4, r1
  88              		.loc 2 26 0
  89 0008 1946     		mov	r1, r3
  90              	.LVL6:
  91 000a FFF7FEFF 		bl	_ZN7TwoWire17beginTransmissionEi
  92              	.LVL7:
  27:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****   Wire.write(dataValue);
  93              		.loc 2 27 0
  94 000e 0448     		ldr	r0, .L6
  95 0010 2146     		mov	r1, r4
  96 0012 FFF7FEFF 		bl	_ZN7TwoWire5writeEh
  28:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****   Wire.endTransmission();
  97              		.loc 2 28 0
  98 0016 0248     		ldr	r0, .L6
  29:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** }
  99              		.loc 2 29 0
 100 0018 BDE81040 		pop	{r4, lr}
  28:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****   Wire.endTransmission();
 101              		.loc 2 28 0
 102 001c FFF7FEBF 		b	_ZN7TwoWire15endTransmissionEv
 103              	.L7:
 104              		.align	2
 105              	.L6:
 106 0020 00000000 		.word	Wire
 107              		.cfi_endproc
 108              	.LFE120:
 110              		.section	.text._Z11readByteI2Cv,"ax",%progbits
 111              		.align	1
 112              		.global	_Z11readByteI2Cv
 113              		.thumb
 114              		.thumb_func
 116              	_Z11readByteI2Cv:
 117              	.LFB121:
  30:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** 
  31:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** byte readByteI2C() {
 118              		.loc 2 31 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              		@ link register save eliminated.
  32:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****     return Wire.read();
  33:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** }
 123              		.loc 2 33 0
  32:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****     return Wire.read();
 124              		.loc 2 32 0
 125 0000 FFF7FEBF 		b	_ZN7TwoWire4readEv.constprop.0
 126              		.cfi_endproc
 127              	.LFE121:
 129              		.section	.text._Z11readByteI2Ci,"ax",%progbits
 130              		.align	1
 131              		.global	_Z11readByteI2Ci
 132              		.thumb
 133              		.thumb_func
 135              	_Z11readByteI2Ci:
 136              	.LFB122:
  34:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** 
  35:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** byte readByteI2C(int deviceAddress) {
 137              		.loc 2 35 0
 138              		.cfi_startproc
 139              		@ args = 0, pretend = 0, frame = 0
 140              		@ frame_needed = 0, uses_anonymous_args = 0
 141              	.LVL8:
 142 0000 0146     		mov	r1, r0
 143 0002 08B5     		push	{r3, lr}
 144              	.LCFI1:
 145              		.cfi_def_cfa_offset 8
 146              		.cfi_offset 14, -4
 147              		.cfi_offset 3, -8
  36:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** 
  37:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****     Wire.requestFrom(deviceAddress, 1);
 148              		.loc 2 37 0
 149 0004 0122     		movs	r2, #1
 150 0006 0348     		ldr	r0, .L10
 151              	.LVL9:
 152 0008 FFF7FEFF 		bl	_ZN7TwoWire11requestFromEii
 153              	.LVL10:
  38:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****     return Wire.read();
  39:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** }
 154              		.loc 2 39 0
 155 000c BDE80840 		pop	{r3, lr}
  38:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****     return Wire.read();
 156              		.loc 2 38 0
 157 0010 FFF7FEBF 		b	_ZN7TwoWire4readEv.constprop.0
 158              	.L11:
 159              		.align	2
 160              	.L10:
 161 0014 00000000 		.word	Wire
 162              		.cfi_endproc
 163              	.LFE122:
 165              		.section	.text._Z11readWordI2Ci,"ax",%progbits
 166              		.align	1
 167              		.global	_Z11readWordI2Ci
 168              		.thumb
 169              		.thumb_func
 171              	_Z11readWordI2Ci:
 172              	.LFB123:
  40:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** 
  41:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** int readWordI2C(int deviceAddress) {
 173              		.loc 2 41 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 177              	.LVL11:
 178 0000 10B5     		push	{r4, lr}
 179              	.LCFI2:
 180              		.cfi_def_cfa_offset 8
 181              		.cfi_offset 14, -4
 182              		.cfi_offset 4, -8
 183              		.loc 2 41 0
 184 0002 0146     		mov	r1, r0
  42:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** 
  43:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****   Wire.requestFrom(deviceAddress, 2);
 185              		.loc 2 43 0
 186 0004 0222     		movs	r2, #2
 187 0006 0548     		ldr	r0, .L13
 188              	.LVL12:
 189 0008 FFF7FEFF 		bl	_ZN7TwoWire11requestFromEii
 190              	.LVL13:
  44:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****   return (Wire.read() << 8) | Wire.read();
 191              		.loc 2 44 0
 192 000c FFF7FEFF 		bl	_ZN7TwoWire4readEv.constprop.0
 193 0010 0446     		mov	r4, r0
 194 0012 FFF7FEFF 		bl	_ZN7TwoWire4readEv.constprop.0
  45:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** }
 195              		.loc 2 45 0
 196 0016 40EA0420 		orr	r0, r0, r4, lsl #8
 197 001a 10BD     		pop	{r4, pc}
 198              	.L14:
 199              		.align	2
 200              	.L13:
 201 001c 00000000 		.word	Wire
 202              		.cfi_endproc
 203              	.LFE123:
 205              		.section	.text._Z11readWordI2Cv,"ax",%progbits
 206              		.align	1
 207              		.global	_Z11readWordI2Cv
 208              		.thumb
 209              		.thumb_func
 211              	_Z11readWordI2Cv:
 212              	.LFB124:
  46:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** 
  47:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** int readWordI2C() {
 213              		.loc 2 47 0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 0
 216              		@ frame_needed = 0, uses_anonymous_args = 0
 217 0000 10B5     		push	{r4, lr}
 218              	.LCFI3:
 219              		.cfi_def_cfa_offset 8
 220              		.cfi_offset 14, -4
 221              		.cfi_offset 4, -8
  48:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** 
  49:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****   return (Wire.read() << 8) | Wire.read();
 222              		.loc 2 49 0
 223 0002 FFF7FEFF 		bl	_ZN7TwoWire4readEv.constprop.0
 224 0006 0446     		mov	r4, r0
 225 0008 FFF7FEFF 		bl	_ZN7TwoWire4readEv.constprop.0
  50:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** }
 226              		.loc 2 50 0
 227 000c 40EA0420 		orr	r0, r0, r4, lsl #8
 228 0010 10BD     		pop	{r4, pc}
 229              		.cfi_endproc
 230              	.LFE124:
 232              		.section	.text._Z12readShortI2Cv,"ax",%progbits
 233              		.align	1
 234              		.global	_Z12readShortI2Cv
 235              		.thumb
 236              		.thumb_func
 238              	_Z12readShortI2Cv:
 239              	.LFB126:
  51:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** 
  52:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** int readShortI2C(int deviceAddress) {
  53:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** 
  54:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****  Wire.requestFrom(deviceAddress, 2);
  55:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****  return readShortI2C();
  56:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** }
  57:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** 
  58:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** int readShortI2C() {
 240              		.loc 2 58 0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 0
 243              		@ frame_needed = 0, uses_anonymous_args = 0
 244 0000 08B5     		push	{r3, lr}
 245              	.LCFI4:
 246              		.cfi_def_cfa_offset 8
 247              		.cfi_offset 14, -4
 248              		.cfi_offset 3, -8
  59:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** 
  60:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****   return (signed short)readWordI2C();
 249              		.loc 2 60 0
 250 0002 FFF7FEFF 		bl	_Z11readWordI2Cv
  61:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** }
 251              		.loc 2 61 0
 252 0006 00B2     		sxth	r0, r0
 253 0008 08BD     		pop	{r3, pc}
 254              		.cfi_endproc
 255              	.LFE126:
 257              		.section	.text._Z12readShortI2Ci,"ax",%progbits
 258              		.align	1
 259              		.global	_Z12readShortI2Ci
 260              		.thumb
 261              		.thumb_func
 263              	_Z12readShortI2Ci:
 264              	.LFB125:
  52:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** int readShortI2C(int deviceAddress) {
 265              		.loc 2 52 0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 0
 268              		@ frame_needed = 0, uses_anonymous_args = 0
 269              	.LVL14:
 270 0000 0146     		mov	r1, r0
 271 0002 08B5     		push	{r3, lr}
 272              	.LCFI5:
 273              		.cfi_def_cfa_offset 8
 274              		.cfi_offset 14, -4
 275              		.cfi_offset 3, -8
  54:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****  Wire.requestFrom(deviceAddress, 2);
 276              		.loc 2 54 0
 277 0004 0222     		movs	r2, #2
 278 0006 0348     		ldr	r0, .L18
 279              	.LVL15:
 280 0008 FFF7FEFF 		bl	_ZN7TwoWire11requestFromEii
 281              	.LVL16:
  56:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** }
 282              		.loc 2 56 0
 283 000c BDE80840 		pop	{r3, lr}
  55:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****  return readShortI2C();
 284              		.loc 2 55 0
 285 0010 FFF7FEBF 		b	_Z12readShortI2Cv
 286              	.L19:
 287              		.align	2
 288              	.L18:
 289 0014 00000000 		.word	Wire
 290              		.cfi_endproc
 291              	.LFE125:
 293              		.section	.text._Z19readReverseShortI2Cv,"ax",%progbits
 294              		.align	1
 295              		.global	_Z19readReverseShortI2Cv
 296              		.thumb
 297              		.thumb_func
 299              	_Z19readReverseShortI2Cv:
 300              	.LFB127:
  62:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** 
  63:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** int readReverseShortI2C() {
 301              		.loc 2 63 0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 0
 304              		@ frame_needed = 0, uses_anonymous_args = 0
 305 0000 10B5     		push	{r4, lr}
 306              	.LCFI6:
 307              		.cfi_def_cfa_offset 8
 308              		.cfi_offset 14, -4
 309              		.cfi_offset 4, -8
  64:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** 
  65:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****   return (signed short)( Wire.read() | (Wire.read() << 8));
 310              		.loc 2 65 0
 311 0002 FFF7FEFF 		bl	_ZN7TwoWire4readEv.constprop.0
 312 0006 0446     		mov	r4, r0
 313 0008 FFF7FEFF 		bl	_ZN7TwoWire4readEv.constprop.0
 314 000c 44EA0020 		orr	r0, r4, r0, lsl #8
  66:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** }
 315              		.loc 2 66 0
 316 0010 00B2     		sxth	r0, r0
 317 0012 10BD     		pop	{r4, pc}
 318              		.cfi_endproc
 319              	.LFE127:
 321              		.section	.text._Z15readWordWaitI2Ci,"ax",%progbits
 322              		.align	1
 323              		.global	_Z15readWordWaitI2Ci
 324              		.thumb
 325              		.thumb_func
 327              	_Z15readWordWaitI2Ci:
 328              	.LFB128:
  67:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** 
  68:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** int readWordWaitI2C(int deviceAddress) {
 329              		.loc 2 68 0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 0
 332              		@ frame_needed = 0, uses_anonymous_args = 0
 333              	.LVL17:
 334 0000 0146     		mov	r1, r0
 335 0002 10B5     		push	{r4, lr}
 336              	.LCFI7:
 337              		.cfi_def_cfa_offset 8
 338              		.cfi_offset 14, -4
 339              		.cfi_offset 4, -8
 340              	.LBB2:
  69:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** 
  70:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****   Wire.requestFrom(deviceAddress, 2); // request two bytes
 341              		.loc 2 70 0
 342 0004 0A48     		ldr	r0, .L26
 343              	.LVL18:
 344 0006 0222     		movs	r2, #2
 345 0008 FFF7FEFF 		bl	_ZN7TwoWire11requestFromEii
 346              	.LVL19:
 347              	.L22:
  71:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****   while(!Wire.available()); // wait until data available
 348              		.loc 2 71 0 discriminator 1
 349 000c 0848     		ldr	r0, .L26
 350 000e FFF7FEFF 		bl	_ZN7TwoWire9availableEv
 351 0012 0028     		cmp	r0, #0
 352 0014 FAD0     		beq	.L22
  72:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****   unsigned char msb = Wire.read();
 353              		.loc 2 72 0
 354 0016 FFF7FEFF 		bl	_ZN7TwoWire4readEv.constprop.0
 355 001a 0446     		mov	r4, r0
 356              	.LVL20:
 357              	.L23:
  73:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****   while(!Wire.available()); // wait until data available
 358              		.loc 2 73 0 discriminator 1
 359 001c 0448     		ldr	r0, .L26
 360 001e FFF7FEFF 		bl	_ZN7TwoWire9availableEv
 361 0022 0028     		cmp	r0, #0
 362 0024 FAD0     		beq	.L23
  74:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****   unsigned char lsb = Wire.read();
 363              		.loc 2 74 0
 364 0026 FFF7FEFF 		bl	_ZN7TwoWire4readEv.constprop.0
 365              	.LVL21:
 366              	.LBE2:
  75:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****   return (((int)msb<<8) | ((int)lsb));
  76:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** }
 367              		.loc 2 76 0
 368 002a 40EA0420 		orr	r0, r0, r4, lsl #8
 369              	.LVL22:
 370 002e 10BD     		pop	{r4, pc}
 371              	.L27:
 372              		.align	2
 373              	.L26:
 374 0030 00000000 		.word	Wire
 375              		.cfi_endproc
 376              	.LFE128:
 378              		.section	.text._Z18readReverseWordI2Ci,"ax",%progbits
 379              		.align	1
 380              		.global	_Z18readReverseWordI2Ci
 381              		.thumb
 382              		.thumb_func
 384              	_Z18readReverseWordI2Ci:
 385              	.LFB129:
  77:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** 
  78:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** int readReverseWordI2C(int deviceAddress) {
 386              		.loc 2 78 0
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 0
 389              		@ frame_needed = 0, uses_anonymous_args = 0
 390              	.LVL23:
 391 0000 10B5     		push	{r4, lr}
 392              	.LCFI8:
 393              		.cfi_def_cfa_offset 8
 394              		.cfi_offset 14, -4
 395              		.cfi_offset 4, -8
 396              		.loc 2 78 0
 397 0002 0146     		mov	r1, r0
 398              	.LBB3:
  79:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** 
  80:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****   Wire.requestFrom(deviceAddress, 2);
 399              		.loc 2 80 0
 400 0004 0222     		movs	r2, #2
 401 0006 0548     		ldr	r0, .L29
 402              	.LVL24:
 403 0008 FFF7FEFF 		bl	_ZN7TwoWire11requestFromEii
 404              	.LVL25:
  81:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****   byte lowerByte = Wire.read();
 405              		.loc 2 81 0
 406 000c FFF7FEFF 		bl	_ZN7TwoWire4readEv.constprop.0
 407 0010 0446     		mov	r4, r0
 408              	.LVL26:
  82:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****   return (Wire.read() << 8) | lowerByte;
 409              		.loc 2 82 0
 410 0012 FFF7FEFF 		bl	_ZN7TwoWire4readEv.constprop.0
 411              	.LVL27:
 412              	.LBE3:
  83:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** }
 413              		.loc 2 83 0
 414 0016 44EA0020 		orr	r0, r4, r0, lsl #8
 415 001a 10BD     		pop	{r4, pc}
 416              	.L30:
 417              		.align	2
 418              	.L29:
 419 001c 00000000 		.word	Wire
 420              		.cfi_endproc
 421              	.LFE129:
 423              		.section	.text._Z10readWhoI2Ci,"ax",%progbits
 424              		.align	1
 425              		.global	_Z10readWhoI2Ci
 426              		.thumb
 427              		.thumb_func
 429              	_Z10readWhoI2Ci:
 430              	.LFB130:
  84:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** 
  85:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** byte readWhoI2C(int deviceAddress) {
 431              		.loc 2 85 0
 432              		.cfi_startproc
 433              		@ args = 0, pretend = 0, frame = 0
 434              		@ frame_needed = 0, uses_anonymous_args = 0
 435              	.LVL28:
 436 0000 10B5     		push	{r4, lr}
 437              	.LCFI9:
 438              		.cfi_def_cfa_offset 8
 439              		.cfi_offset 14, -4
 440              		.cfi_offset 4, -8
 441              		.loc 2 85 0
 442 0002 0446     		mov	r4, r0
  86:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** 
  87:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****   // read the ID of the I2C device
  88:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****   Wire.beginTransmission(deviceAddress);
 443              		.loc 2 88 0
 444 0004 2146     		mov	r1, r4
 445 0006 0B48     		ldr	r0, .L32
 446              	.LVL29:
 447 0008 FFF7FEFF 		bl	_ZN7TwoWire17beginTransmissionEi
 448              	.LVL30:
  89:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****   Wire.write((byte)0);
 449              		.loc 2 89 0
 450 000c 0021     		movs	r1, #0
 451 000e 0948     		ldr	r0, .L32
 452 0010 FFF7FEFF 		bl	_ZN7TwoWire5writeEh
  90:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****   Wire.endTransmission();
 453              		.loc 2 90 0
 454 0014 0748     		ldr	r0, .L32
 455 0016 FFF7FEFF 		bl	_ZN7TwoWire15endTransmissionEv
  91:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****   delay(100);
 456              		.loc 2 91 0
 457 001a 6420     		movs	r0, #100
 458 001c FFF7FEFF 		bl	_Z5delaym
  92:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****   Wire.requestFrom(deviceAddress, 1);
 459              		.loc 2 92 0
 460 0020 2146     		mov	r1, r4
 461 0022 0122     		movs	r2, #1
 462 0024 0348     		ldr	r0, .L32
 463 0026 FFF7FEFF 		bl	_ZN7TwoWire11requestFromEii
  93:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****   return Wire.read();
  94:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** }
 464              		.loc 2 94 0
 465 002a BDE81040 		pop	{r4, lr}
  93:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****   return Wire.read();
 466              		.loc 2 93 0
 467 002e FFF7FEBF 		b	_ZN7TwoWire4readEv.constprop.0
 468              	.L33:
 469 0032 00BF     		.align	2
 470              	.L32:
 471 0034 00000000 		.word	Wire
 472              		.cfi_endproc
 473              	.LFE130:
 475              		.section	.text._Z17updateRegisterI2Cihh,"ax",%progbits
 476              		.align	1
 477              		.global	_Z17updateRegisterI2Cihh
 478              		.thumb
 479              		.thumb_func
 481              	_Z17updateRegisterI2Cihh:
 482              	.LFB131:
  95:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** 
  96:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** void updateRegisterI2C(int deviceAddress, byte dataAddress, byte dataValue) {
 483              		.loc 2 96 0
 484              		.cfi_startproc
 485              		@ args = 0, pretend = 0, frame = 0
 486              		@ frame_needed = 0, uses_anonymous_args = 0
 487              	.LVL31:
 488 0000 38B5     		push	{r3, r4, r5, lr}
 489              	.LCFI10:
 490              		.cfi_def_cfa_offset 16
 491              		.cfi_offset 14, -4
 492              		.cfi_offset 5, -8
 493              		.cfi_offset 4, -12
 494              		.cfi_offset 3, -16
 495              		.loc 2 96 0
 496 0002 0346     		mov	r3, r0
 497 0004 0C46     		mov	r4, r1
  97:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** 
  98:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****   Wire.beginTransmission(deviceAddress);
 498              		.loc 2 98 0
 499 0006 0948     		ldr	r0, .L35
 500              	.LVL32:
 501 0008 1946     		mov	r1, r3
 502              	.LVL33:
  96:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** void updateRegisterI2C(int deviceAddress, byte dataAddress, byte dataValue) {
 503              		.loc 2 96 0
 504 000a 1546     		mov	r5, r2
 505              		.loc 2 98 0
 506 000c FFF7FEFF 		bl	_ZN7TwoWire17beginTransmissionEi
 507              	.LVL34:
  99:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****   Wire.write(dataAddress);
 508              		.loc 2 99 0
 509 0010 2146     		mov	r1, r4
 510 0012 0648     		ldr	r0, .L35
 511 0014 FFF7FEFF 		bl	_ZN7TwoWire5writeEh
 100:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****   Wire.write(dataValue);
 512              		.loc 2 100 0
 513 0018 0448     		ldr	r0, .L35
 514 001a 2946     		mov	r1, r5
 515 001c FFF7FEFF 		bl	_ZN7TwoWire5writeEh
 101:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****   Wire.endTransmission();
 516              		.loc 2 101 0
 517 0020 0248     		ldr	r0, .L35
 102:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp **** }  
 518              		.loc 2 102 0
 519 0022 BDE83840 		pop	{r3, r4, r5, lr}
 101:C:/MinGW/msys/1.0/home/Klaus/Libraries/AQ_I2C\Device_I2C.cpp ****   Wire.endTransmission();
 520              		.loc 2 101 0
 521 0026 FFF7FEBF 		b	_ZN7TwoWire15endTransmissionEv
 522              	.L36:
 523 002a 00BF     		.align	2
 524              	.L35:
 525 002c 00000000 		.word	Wire
 526              		.cfi_endproc
 527              	.LFE131:
 529              		.text
 530              	.Letext0:
 531              		.file 3 "../Libmaple/libmaple/libmaple/libmaple_types.h"
 532              		.file 4 "../Libmaple/libmaple/wirish/wirish.h"
 533              		.file 5 "../Libmaple/libmaple/libmaple/systick.h"
DEFINED SYMBOLS
                            *ABS*:00000000 Device_I2C.cpp
C:\Users\Klaus\AppData\Local\Temp\cct2ul6X.s:19     .text._ZN7TwoWire4readEv.constprop.0:00000000 $t
C:\Users\Klaus\AppData\Local\Temp\cct2ul6X.s:23     .text._ZN7TwoWire4readEv.constprop.0:00000000 _ZN7TwoWire4readEv.constprop.0
C:\Users\Klaus\AppData\Local\Temp\cct2ul6X.s:38     .text._ZN7TwoWire4readEv.constprop.0:00000008 $d
C:\Users\Klaus\AppData\Local\Temp\cct2ul6X.s:43     .text._ZN7TwoWire5writeEh:00000000 $t
C:\Users\Klaus\AppData\Local\Temp\cct2ul6X.s:48     .text._ZN7TwoWire5writeEh:00000000 _ZN7TwoWire5writeEh
C:\Users\Klaus\AppData\Local\Temp\cct2ul6X.s:64     .text._Z11sendByteI2Cih:00000000 $t
C:\Users\Klaus\AppData\Local\Temp\cct2ul6X.s:69     .text._Z11sendByteI2Cih:00000000 _Z11sendByteI2Cih
C:\Users\Klaus\AppData\Local\Temp\cct2ul6X.s:106    .text._Z11sendByteI2Cih:00000020 $d
C:\Users\Klaus\AppData\Local\Temp\cct2ul6X.s:111    .text._Z11readByteI2Cv:00000000 $t
C:\Users\Klaus\AppData\Local\Temp\cct2ul6X.s:116    .text._Z11readByteI2Cv:00000000 _Z11readByteI2Cv
C:\Users\Klaus\AppData\Local\Temp\cct2ul6X.s:130    .text._Z11readByteI2Ci:00000000 $t
C:\Users\Klaus\AppData\Local\Temp\cct2ul6X.s:135    .text._Z11readByteI2Ci:00000000 _Z11readByteI2Ci
C:\Users\Klaus\AppData\Local\Temp\cct2ul6X.s:161    .text._Z11readByteI2Ci:00000014 $d
C:\Users\Klaus\AppData\Local\Temp\cct2ul6X.s:166    .text._Z11readWordI2Ci:00000000 $t
C:\Users\Klaus\AppData\Local\Temp\cct2ul6X.s:171    .text._Z11readWordI2Ci:00000000 _Z11readWordI2Ci
C:\Users\Klaus\AppData\Local\Temp\cct2ul6X.s:201    .text._Z11readWordI2Ci:0000001c $d
C:\Users\Klaus\AppData\Local\Temp\cct2ul6X.s:206    .text._Z11readWordI2Cv:00000000 $t
C:\Users\Klaus\AppData\Local\Temp\cct2ul6X.s:211    .text._Z11readWordI2Cv:00000000 _Z11readWordI2Cv
C:\Users\Klaus\AppData\Local\Temp\cct2ul6X.s:233    .text._Z12readShortI2Cv:00000000 $t
C:\Users\Klaus\AppData\Local\Temp\cct2ul6X.s:238    .text._Z12readShortI2Cv:00000000 _Z12readShortI2Cv
C:\Users\Klaus\AppData\Local\Temp\cct2ul6X.s:258    .text._Z12readShortI2Ci:00000000 $t
C:\Users\Klaus\AppData\Local\Temp\cct2ul6X.s:263    .text._Z12readShortI2Ci:00000000 _Z12readShortI2Ci
C:\Users\Klaus\AppData\Local\Temp\cct2ul6X.s:289    .text._Z12readShortI2Ci:00000014 $d
C:\Users\Klaus\AppData\Local\Temp\cct2ul6X.s:294    .text._Z19readReverseShortI2Cv:00000000 $t
C:\Users\Klaus\AppData\Local\Temp\cct2ul6X.s:299    .text._Z19readReverseShortI2Cv:00000000 _Z19readReverseShortI2Cv
C:\Users\Klaus\AppData\Local\Temp\cct2ul6X.s:322    .text._Z15readWordWaitI2Ci:00000000 $t
C:\Users\Klaus\AppData\Local\Temp\cct2ul6X.s:327    .text._Z15readWordWaitI2Ci:00000000 _Z15readWordWaitI2Ci
C:\Users\Klaus\AppData\Local\Temp\cct2ul6X.s:374    .text._Z15readWordWaitI2Ci:00000030 $d
C:\Users\Klaus\AppData\Local\Temp\cct2ul6X.s:379    .text._Z18readReverseWordI2Ci:00000000 $t
C:\Users\Klaus\AppData\Local\Temp\cct2ul6X.s:384    .text._Z18readReverseWordI2Ci:00000000 _Z18readReverseWordI2Ci
C:\Users\Klaus\AppData\Local\Temp\cct2ul6X.s:419    .text._Z18readReverseWordI2Ci:0000001c $d
C:\Users\Klaus\AppData\Local\Temp\cct2ul6X.s:424    .text._Z10readWhoI2Ci:00000000 $t
C:\Users\Klaus\AppData\Local\Temp\cct2ul6X.s:429    .text._Z10readWhoI2Ci:00000000 _Z10readWhoI2Ci
C:\Users\Klaus\AppData\Local\Temp\cct2ul6X.s:471    .text._Z10readWhoI2Ci:00000034 $d
C:\Users\Klaus\AppData\Local\Temp\cct2ul6X.s:476    .text._Z17updateRegisterI2Cihh:00000000 $t
C:\Users\Klaus\AppData\Local\Temp\cct2ul6X.s:481    .text._Z17updateRegisterI2Cihh:00000000 _Z17updateRegisterI2Cihh
C:\Users\Klaus\AppData\Local\Temp\cct2ul6X.s:525    .text._Z17updateRegisterI2Cihh:0000002c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
_ZN7TwoWire7receiveEv
Wire
_ZN7TwoWire4sendEh
_ZN7TwoWire17beginTransmissionEi
_ZN7TwoWire15endTransmissionEv
_ZN7TwoWire11requestFromEii
_ZN7TwoWire9availableEv
_Z5delaym
